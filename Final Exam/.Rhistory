# Load necessary libraries
library(tidyr)
library(dplyr)
library(readr)
library(cluster)
library(factoextra)
# Read the dataset
data <- read_csv("absenteeism_1.csv")
# Count number of rows with missing values
missing_rows <- sum(is.na(data))
# Print the result
cat("Number of rows with missing values: ", missing_rows, "\n")
# Delete rows with missing values
clean_data <- na.omit(data)
# Convert Abs_cat to numerical values (0, 1, 2)
lookup_table <- c("Abs_low" = 0, "Abs_Med" = 1, "Abs_High" = 2)
clean_data$Abs_cat <- as.integer(lookup_table[clean_data$Abs_cat])
# Convert Age_cat to factor
clean_data$Age_cat <- as.factor(clean_data$Age_cat)
# Perform one hot encoding on Trans_expense_cat
encoded_trans_expense_cat <- model.matrix(~ Trans_expense_cat - 1, data = clean_data)
# Perform one hot encoding on Dist_to_work
encoded_dist_to_work <- model.matrix(~ Dist_to_work - 1, data = clean_data)
# Perform one hot encoding on Age_cat
encoded_age_cat <- model.matrix(~ Age_cat - 1, data = clean_data)
# Combine encoded columns with the original dataframe
clean_data <- cbind(clean_data[, -which(names(clean_data) %in% c("Trans_expense_cat", "Dist_to_work", "Age_cat", "Abs_cat"))],
encoded_trans_expense_cat,
encoded_dist_to_work,
encoded_age_cat)
# Normalize the data
normalized_data <- scale(clean_data)
# Perform hierarchical clustering
hclust_obj <- hclust(dist(normalized_data), method = "ward.D2")
hclust_groups <- cutree(hclust_obj, k = 3)
# Add the cluster labels to the original data
clean_data$cluster <- as.factor(hclust_groups)
# Plot the hierarchical clustering dendrogram
fviz_dend(hclust_obj, k = 3, cex = 0.5)
# Perform K-means clustering
kmeans_obj <- kmeans(normalized_data, centers = 3, nstart = 25)
kmeans_groups <- kmeans_obj$cluster
# Add the cluster labels to the original data
clean_data$kmeans_cluster <- as.factor(kmeans_groups)
# Plot the K-means clustering results
fviz_cluster(kmeans_obj, data = normalized_data)
# Compare the clusters with Abs_cat
abs_cat_clusters <- data.frame(data$Abs_cat, clean_data$cluster, clean_data$kmeans_cluster)
table(abs_cat_clusters$Abs_cat, abs_cat_clusters$cluster)
table(abs_cat_clusters$Abs_cat, abs_cat_clusters$kmeans_cluster)
# Calculate the centroids of the K-means clusters
kmeans_centroids <- as.data.frame(kmeans_obj$centers)
colnames(kmeans_centroids) <- colnames(clean_data[, -which(names(clean_data) %in% c("Trans_expense_cat", "Dist_to_work", "Age_cat", "Abs_cat", "cluster", "kmeans_cluster"))])
print(kmeans_centroids)
# Load necessary libraries
library(cluster)
library(ggplot2)
library(dplyr)
library(readr)
library(factoextra)
# Read the dataset
data <- read_csv("absenteeism.csv")
# Load necessary libraries
library(cluster)
library(ggplot2)
library(dplyr)
library(readr)
library(factoextra)
# Read the dataset
data <- read_csv("absenteeism_0.csv")
# Delete rows with missing values
data_clean <- na.omit(data)
# Save abs_cat for later comparison
abs_cat <- data_clean$Abs_cat
# Remove abs_cat from clustering data
data_clean$Abs_cat <- NULL
# Perform one hot encoding on categorical variables if any
# Replace 'categorical_var' with actual categorical variables in the dataset
# data_clean <- model.matrix(~ . + 0, data = data_clean)
# Normalize the data
data_scaled <- scale(data_clean)
# Perform hierarchical clustering
hclust_obj <- hclust(dist(data_scaled), method = "ward.D2")
hclust_groups <- cutree(hclust_obj, k = 3)
# Perform K-means clustering
set.seed(123)
kmeans_obj <- kmeans(data_scaled, centers = 3)
kmeans_groups <- kmeans_obj$cluster
# Compare the clusters with Abs_cat
data_clean$Abs_cat <- abs_cat
data_clean$cluster_hierarchical <- as.factor(hclust_groups)
data_clean$cluster_kmeans <- as.factor(kmeans_groups)
# Plot the hierarchical clustering dendrogram
fviz_dend(hclust_obj, k = 3, cex = 0.5)
# Plot the K-means clustering results
fviz_cluster(kmeans_obj, data = data_scaled)
# Print the centroid of each K-means cluster
cat("Centroids of K-means clusters:\n")
print(kmeans_obj$centers)
# Compare clusters with Abs_cat
table(data_clean$Abs_cat, data_clean$cluster_hierarchical)
table(data_clean$Abs_cat, data_clean$cluster_kmeans)
# Load necessary libraries
library(cluster)
library(ggplot2)
library(dplyr)
library(readr)
library(factoextra)
# Read the dataset
data <- read_csv("absenteeism_0.csv")
# Delete rows with missing values
data_clean <- na.omit(data)
# Save abs_cat for later comparison
abs_cat <- data_clean$Abs_cat
# Remove abs_cat from clustering data
data_clean$Abs_cat <- NULL
# Normalize the data
data_scaled <- scale(data_clean)
# Perform hierarchical clustering
hclust_obj <- hclust(dist(data_scaled), method = "ward.D2")
hclust_groups <- cutree(hclust_obj, k = 3)
# Perform K-means clustering
set.seed(123)
kmeans_obj <- kmeans(data_scaled, centers = 3)
kmeans_groups <- kmeans_obj$cluster
# Compare the clusters with Abs_cat
data_clean$Abs_cat <- abs_cat
data_clean$cluster_hierarchical <- as.factor(hclust_groups)
data_clean$cluster_kmeans <- as.factor(kmeans_groups)
# Plot the hierarchical clustering dendrogram
fviz_dend(hclust_obj, k = 3, cex = 0.5)
# Plot the K-means clustering results
fviz_cluster(kmeans_obj, data = data_scaled)
# Print the centroid of each K-means cluster
cat("Centroids of K-means clusters:\n")
print(kmeans_obj$centers)
# Compare clusters with Abs_cat
table(data_clean$Abs_cat, data_clean$cluster_hierarchical)
table(data_clean$Abs_cat, data_clean$cluster_kmeans)
# Load necessary libraries
library(cluster)
library(ggplot2)
library(dplyr)
library(readr)
library(factoextra)
# Read the dataset
data <- read_csv("absenteeism_0.csv")
# Delete rows with missing values
data_clean <- na.omit(data)
# Save abs_cat for later comparison
abs_cat <- data_clean$Abs_cat
# Remove abs_cat from clustering data
data_clean$Abs_cat <- NULL
# Normalize the data
data_scaled <- scale(data_clean)
# Perform hierarchical clustering
hclust_obj <- hclust(dist(data_scaled), method = "ward.D2")
hclust_groups <- cutree(hclust_obj, k = 3)
# Perform K-means clustering
set.seed(123)
kmeans_obj <- kmeans(data_scaled, centers = 3)
kmeans_groups <- kmeans_obj$cluster
# Compare the clusters with Abs_cat
data_clean$Abs_cat <- abs_cat
data_clean$cluster_hierarchical <- as.factor(hclust_groups)
data_clean$cluster_kmeans <- as.factor(kmeans_groups)
# Plot the hierarchical clustering dendrogram
fviz_dend(hclust_obj, k = 3, cex = 0.5)
# Plot the K-means clustering results
fviz_cluster(kmeans_obj, data = data_scaled)
# Print the centroid of each K-means cluster
cat("Centroids of K-means clusters:\n")
print(kmeans_obj$centers)
# Compare clusters with Abs_cat
table(data_clean$Abs_cat, data_clean$cluster_hierarchical)
table(data_clean$Abs_cat, data_clean$cluster_kmeans)
